{"version":3,"sources":["ElevatorButton.jsx","ElevatorButtons.jsx","Elevator.jsx","BuildingFloor.jsx","Building.jsx","Layout.jsx","App.js","index.js"],"names":["StyledElevatorButton","styled","button","ElevatorButton","_ref","pressed","rest","_jsx","StyledElevatorButtons","div","ElevatorButtons","floors","onFloorRequest","onButtonPress","React","useCallback","index","e","buttons","i","push","onClick","children","defaultProps","StyledElevator","StyledElevatorCage","Elevator","props","StyledWindow","StyledElevatorShaft","StyledBuildingFloor","height","BuildingFloor","_jsxs","FLOOR_HEIGHT","StyledBuilding","currentFloor","Building","buildingFloors","Layout","App","setCurrentFloor","useState","elevatorRequests","setElevatorRequests","directionUp","setDirectionUp","interval","useRef","floor","newRequests","moveToFloor","useEffect","clearTimeout","current","setInterval","className","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f3c10635.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst StyledElevatorButton = styled.button`\n  &[aria-pressed=\"true\"] {\n    background: yellow;\n  }\n  border-radius: 50%;\n  border: 5px solid black;\n  height: 100px;\n  width: 100px;\n  font-weight: bold;\n  font-size: 40px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const ElevatorButton = ({ pressed, ...rest }) => {\n  return <StyledElevatorButton aria-pressed={!!pressed} {...rest} />;\n};\n\nElevatorButton.propTypes = {\n  pressed: PropTypes.bool\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { ElevatorButton } from \"./ElevatorButton\";\n\nconst StyledElevatorButtons = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const ElevatorButtons = ({\n  floors,\n  pressed,\n  onFloorRequest,\n  ...rest\n}) => {\n  const onButtonPress = React.useCallback(\n    (index) => (e) => {\n      if (typeof onFloorRequest === \"function\") {\n        onFloorRequest(index);\n      }\n    },\n    [onFloorRequest]\n  );\n\n  const buttons = [];\n  for (let i = 0; i < floors; i += 1) {\n    buttons.push(\n      <ElevatorButton key={i} pressed={pressed[i]} onClick={onButtonPress(i)}>\n        {i + 1}\n      </ElevatorButton>\n    );\n  }\n\n  return <StyledElevatorButtons {...rest}>{buttons}</StyledElevatorButtons>;\n};\n\nElevatorButtons.propTypes = {\n  floors: PropTypes.number,\n  pressed: PropTypes.arrayOf(PropTypes.bool),\n  onFloorRequest: PropTypes.func\n};\n\nElevatorButtons.defaultProps = {\n  floors: 12,\n  pressed: [],\n  onFloorRequest: () => {}\n};\n","import styled from \"styled-components\";\n\nexport const StyledElevator = styled.div`\n  padding: 10px;\n  display: flex;\n  justify-content: center;\n  box-sizing: border-box;\n`;\n\nconst StyledElevatorCage = styled.div`\n  height: 100%;\n  width: 30px;\n  background: black;\n  border-radius: 3px;\n`;\n\nexport const Elevator = (props) => {\n  return (\n    <StyledElevator>\n      <StyledElevatorCage />\n    </StyledElevator>\n  );\n};\n","import styled from \"styled-components\";\n\nconst StyledWindow = styled.div`\n  background: #fff;\n  height: 100%;\n`;\n\nconst StyledElevatorShaft = styled.div``;\n\nexport const StyledBuildingFloor = styled.div`\n  height: ${(props) => props.height}px;\n  padding: 10px;\n  display: flex;\n  gap: 10px;\n  box-sizing: border-box;\n\n  ${StyledWindow} {\n    flex: 1 1 auto;\n  }\n\n  ${StyledElevatorShaft} {\n    flex: 1 1 auto;\n  }\n`;\n\nexport const BuildingFloor = ({ height, ...rest }) => {\n  return (\n    <StyledBuildingFloor height={height} {...rest}>\n      <StyledWindow />\n      <StyledWindow />\n      <StyledWindow />\n      <StyledElevatorShaft />\n      <StyledWindow />\n      <StyledWindow />\n      <StyledWindow />\n    </StyledBuildingFloor>\n  );\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { Elevator, StyledElevator } from \"./Elevator\";\nimport { BuildingFloor } from \"./BuildingFloor\";\n\nconst FLOOR_HEIGHT = 100;\n\nconst StyledBuilding = styled.div`\n  height: ${(props) => props.floors * FLOOR_HEIGHT}px;\n  width: 200px;\n  background: gray;\n\n  position: relative;\n  ${StyledElevator} {\n    height: ${FLOOR_HEIGHT}px;\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    transform: translateY(-${(props) => props.currentFloor * FLOOR_HEIGHT}px);\n    transition: 1s ease-in-out transform;\n  }\n`;\n\nexport const Building = (props) => {\n  const buildingFloors = [];\n  for (let i = 0; i < props.floors; i += 1) {\n    buildingFloors.push(<BuildingFloor height={FLOOR_HEIGHT} />);\n  }\n\n  return (\n    <StyledBuilding {...props}>\n      {buildingFloors}\n      <Elevator />\n    </StyledBuilding>\n  );\n};\n\nBuilding.propTypes = {\n  floors: PropTypes.number,\n  currentFloor: PropTypes.number\n};\n\nBuilding.defaultProps = {\n  currentFloor: 6\n};\n","import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { ElevatorButtons } from \"./ElevatorButtons\";\nimport { Building } from \"./Building\";\nimport { Layout } from \"./Layout\";\n\nconst FLOORS = 8;\n\nexport default function App() {\n  const [currentFloor, setCurrentFloor] = React.useState(0);\n  const [elevatorRequests, setElevatorRequests] = React.useState([]);\n  const [directionUp, setDirectionUp] = React.useState(true); // Track elevator direction\n  const interval = React.useRef();\n\n  // Update elevator requests when an elevator button is pressed\n  const onFloorRequest = React.useCallback(\n    (floor) => {\n      if (!elevatorRequests[floor] && floor !== currentFloor) {\n        const newRequests = [...elevatorRequests];\n        newRequests[floor] = true;\n        setElevatorRequests(newRequests);\n      }\n    },\n    [elevatorRequests, currentFloor]\n  );\n\n  const moveToFloor = React.useCallback(\n    (floor) => {\n      setCurrentFloor(floor);\n      const newRequests = [...elevatorRequests];\n      newRequests[floor] = false;\n      setElevatorRequests(newRequests);\n    },\n    [elevatorRequests]\n  );\n\n  // Check for requests, process requests based on current direction\n  React.useEffect(() => {\n    clearTimeout(interval.current);\n    interval.current = setInterval(() => {\n      if (directionUp) {\n        // Look for requests in the upward direction first\n        for (let i = currentFloor + 1; i < FLOORS; i++) {\n          if (elevatorRequests[i]) {\n            moveToFloor(i);\n            return;\n          }\n        }\n        // If no requests upwards, switch to downward direction\n        setDirectionUp(false);\n      } else {\n        // Look for requests in the downward direction\n        for (let i = currentFloor - 1; i >= 0; i--) {\n          if (elevatorRequests[i]) {\n            moveToFloor(i);\n            return;\n          }\n        }\n        // If no requests downwards, switch to upward direction\n        setDirectionUp(true);\n      }\n    }, 2000);\n  }, [currentFloor, elevatorRequests, moveToFloor, directionUp]);\n\n  return (\n    <Layout className=\"App\">\n      <Building floors={FLOORS} currentFloor={currentFloor} />\n      <ElevatorButtons\n        floors={FLOORS}\n        onFloorRequest={onFloorRequest}\n        pressed={elevatorRequests}\n      />\n    </Layout>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}